{
    "Parameters": {
        "Subnet1": {
            "Default": "subnet-757bf058",
            "Description": "First VPC subnet ID for the app.",
            "Type": "String"
        },
        "Subnet2": {
            "Default": "subnet-4ea6dc07",
            "Description": "Second VPC subnet ID for the app.",
            "Type": "String"
        },
        "VpcId": {
            "Default": "vpc-1f04cf79",
            "Description": "VPC ID for the app.",
            "Type": "String"
        },
        "WebappZip": {
            "Description": "Name of WebApp zip",
            "Type": "String"
        }
    },
    "Resources": {
        "AutoscalingGroup": {
            "Properties": {
                "DesiredCapacity": 2,
                "HealthCheckGracePeriod": 300,
                "HealthCheckType": "EC2",
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "LoadBalancer"
                    }
                ],
                "MaxSize": 4,
                "MinSize": 1,
                "VPCZoneIdentifier": [
                    {
                        "Ref": "Subnet1"
                    },
                    {
                        "Ref": "Subnet2"
                    }
                ]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": "true"
                },
                "AutoScalingRollingUpdate": {
                    "MaxBatchSize": "1",
                    "MinInstancesInService": "1",
                    "PauseTime": "PT5M"
                }
            }
        },
        "AutoscalingSG": {
            "Properties": {
                "GroupDescription": "Allows inbound connection from elb sg on port 80",
                "SecurityGroupIngress": [
                    {
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupId": {
                            "Ref": "ElbSg"
                        },
                        "ToPort": "80"
                    }
                ],
                "VpcId": {
                    "Ref": "VpcId"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "ElbSg": {
            "Properties": {
                "GroupDescription": "Allows inbound connection from from everywhere on port 80",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    }
                ],
                "VpcId": {
                    "Ref": "VpcId"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "LaunchConfiguration": {
            "Properties": {
                "AssociatePublicIpAddress": "true",
                "IamInstanceProfile": "arn:aws:iam::205198152101:instance-profile/webapps3",
                "ImageId": "ami-b73b63a0",
                "InstanceType": "t2.micro",
                "KeyName": "thivancf",
                "SecurityGroups": [
                    {
                        "Ref": "AutoscalingSG"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "sudo yum install httpd -y\n",
                                "sudo chkconfig httpd on\n",
                                "sudo service httpd start\n",
                                "sudo touch /var/www/html/index.html\n",
                                "sudo service httpd restart\n",
                                "aws s3 cp s3://thivan-sample-data/webapp-",
                                {
                                    "Ref": "WebappZip"
                                },
                                " .\n",
                                "cfn-signal -e 0",
                                "    --resource AutoscalingGroup",
                                "    --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "    --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "LoadBalancer": {
            "Properties": {
                "ConnectionDrainingPolicy": {
                    "Enabled": true,
                    "Timeout": 120
                },
                "CrossZone": "true",
                "HealthCheck": {
                    "HealthyThreshold": "2",
                    "Interval": "20",
                    "Target": "TCP:80",
                    "Timeout": "15",
                    "UnhealthyThreshold": "9"
                },
                "Listeners": [
                    {
                        "InstancePort": "80",
                        "LoadBalancerPort": "80",
                        "Protocol": "HTTP"
                    }
                ],
                "LoadBalancerName": "webapp-elb",
                "Scheme": "internet-facing",
                "SecurityGroups": [
                    {
                        "Ref": "ElbSg"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "Subnet1"
                    },
                    {
                        "Ref": "Subnet2"
                    }
                ]
            },
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
        }
    }
}
